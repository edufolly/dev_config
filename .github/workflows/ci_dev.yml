name: Dev Native Build

on:
  push:
    branches: [ dev ]

jobs:
  ########
  # Boot #
  ########
  boot:
    name: Boot
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version-step.outputs.version }}
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Check Version
        run: ./check_version.sh

      - name: Flutter SDK
        uses: subosito/flutter-action@v2

      - name: Pub get
        run: dart pub get

      - name: Dart Analyze
        run: dart analyze --fatal-infos

      # TODO - Tests

      - name: Get Pubspec Version
        id: version-step
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | cut -c 10- | cut -f 1 -d '+')
          echo "::set-output name=version::$VERSION"

  ###############
  # Linux Build #
  ###############
  linux-build:
    name: Linux Build
    needs: [ boot ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      
      - name: Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          cache: true

      - name: Build
        run: |
          dart --version
          mkdir -p build
          dart pub get
          dart compile exe -o build/dev-config bin/main.dart
          chmod a+x build/dev-config

      - name: Compress Build
        working-directory: build
        run: tar -cvzf dev-config-linux.tar.gz dev-config

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dev-config-linux.tar.gz
          path: build/dev-config-linux.tar.gz
          retention-days: 1

  #################
  # Windows Build #
  #################
  windows-build:
    name: Windows Build
    needs: [ boot ]
    runs-on: windows-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      
      - name: Flutter SDK
        uses: subosito/flutter-action@v2

      - name: Build
        run: |
          dart --version
          mkdir build
          dart pub get
          dart compile exe -o build/dev-config.exe bin/main.dart

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build/dev-config.exe
          path: dev-config-windows
          retention-days: 1

  ###############
  # MacOS Build #
  ###############
  macos-build:
    name: MacOS Build
    needs: [ boot ]
    runs-on: macos-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      
      - name: Flutter SDK
        uses: subosito/flutter-action@v2

      - name: Build
        run: |
          dart --version
          mkdir -p build
          dart pub get
          dart compile exe -o build/dev-config bin/main.dart
          chmod a+x build/dev-config

      - name: Compress Build
        working-directory: build
        run: tar -cvzf dev-config-macos.tar.gz dev-config

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dev-config-macos.tar.gz
          path: build/dev-config-macos.tar.gz
          retention-days: 1

  ##################
  # Release Deploy #
  ##################
  release-deploy:
    name: Release Deploy
    needs: [ boot, linux-build, windows-build, macos-build ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Creating a GitHub Tag
        uses: mathieudutour/github-tag-action@v6.0
        with:
          custom_tag: ${{ needs.boot.outputs.version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create a GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ needs.boot.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: artifacts
